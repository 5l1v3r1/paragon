on: [push, pull_request]
name: CI
jobs:
  test:
    strategy:
      matrix:
        go-version: [1.13.x, 1.14.x]
        platform: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Install Go
        uses: actions/setup-go@v1
        with:
          go-version: ${{ matrix.go-version }}
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Run Tests
        run: go test -v -coverpkg=./... -covermode=atomic -coverprofile=coverage.out ./...
      - name: Send Test Coverage
        if: matrix.platform == 'ubuntu-latest'
        env:
          COVERALLS_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          GO111MODULE=off go get github.com/mattn/goveralls
          $(go env GOPATH)/bin/goveralls -coverprofile=coverage.out -service=github

  build:
    needs: [test]
    runs-on: ubuntu-latest
    steps:
      - name: Install Go
        uses: actions/setup-go@v1
        with:
          go-version: 1.14.x
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Build Artifacts
        run: |
          export GO111MODULE=on
          GOOS=linux   GOARCH=amd64 go build -ldflags="-s -w" -o build/bundle-linux-amd64 ./cmd/bundle
          GOOS=darwin  GOARCH=amd64 go build -ldflags="-s -w" -o build/bundle-darwin-amd64 ./cmd/bundle
          GOOS=windows GOARCH=amd64 go build -ldflags="-s -w" -o build/bundle-windows-amd64.exe ./cmd/bundle

          GOOS=linux   GOARCH=amd64 go build -ldflags="-s -w" -o build/c2-linux-amd64 ./cmd/c2
          GOOS=darwin  GOARCH=amd64 go build -ldflags="-s -w" -o build/c2-darwin-amd64 ./cmd/c2
          GOOS=windows GOARCH=amd64 go build -ldflags="-s -w" -o build/c2-windows-amd64.exe ./cmd/c2

          GOOS=linux   GOARCH=amd64 go build -ldflags="-s -w" -o build/worker-linux-amd64 ./cmd/worker
          GOOS=darwin  GOARCH=amd64 go build -ldflags="-s -w" -o build/worker-darwin-amd64 ./cmd/worker
          GOOS=windows GOARCH=amd64 go build -ldflags="-s -w" -o build/worker-windows-amd64.exe ./cmd/worker

          GOOS=linux   GOARCH=amd64 go build -ldflags="-s -w" -o build/teamserver-linux-amd64 ./cmd/teamserver
          GOOS=darwin  GOARCH=amd64 go build -ldflags="-s -w" -o build/teamserver-darwin-amd64 ./cmd/teamserver
          GOOS=windows GOARCH=amd64 go build -ldflags="-s -w" -o build/teamserver-windows-amd64.exe ./cmd/teamserver
      - name: Upload Artifacts
        uses: actions/upload-artifact@master
        with:
          name: binaries
          path: build/

  docker-agent:
    name: Docker (agent)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Publish to Github Registry
        uses: elgohr/Publish-Docker-Github-Action@master
        with:
          name: kcarretto/paragon/agent
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          registry: docker.pkg.github.com
          dockerfile: ./docker/agent.Dockerfile

  docker-c2:
    name: Docker (c2)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Publish to Github Registry
        uses: elgohr/Publish-Docker-Github-Action@master
        with:
          name: kcarretto/paragon/c2
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          registry: docker.pkg.github.com
          dockerfile: ./docker/c2.Dockerfile

  docker-teamserver:
    name: Docker (teamserver)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Publish to Github Registry
        uses: elgohr/Publish-Docker-Github-Action@master
        with:
          name: kcarretto/paragon/teamserver
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          registry: docker.pkg.github.com
          dockerfile: ./docker/teamserver.Dockerfile

  docker-worker:
    name: Docker (worker)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Publish to Github Registry
        uses: elgohr/Publish-Docker-Github-Action@master
        with:
          name: kcarretto/paragon/worker
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          registry: docker.pkg.github.com
          dockerfile: ./docker/worker.Dockerfile
