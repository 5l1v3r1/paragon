// Code generated by entc, DO NOT EDIT.

package jobtemplate

import (
	"github.com/kcarretto/paragon/ent/schema"
)

const (
	// Label holds the string label denoting the jobtemplate type in the database.
	Label = "job_template"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldName holds the string denoting the name vertex property in the database.
	FieldName = "name"
	// FieldContent holds the string denoting the content vertex property in the database.
	FieldContent = "content"

	// Table holds the table name of the jobtemplate in the database.
	Table = "job_templates"
	// JobsTable is the table the holds the jobs relation/edge.
	JobsTable = "jobs"
	// JobsInverseTable is the table name for the Job entity.
	// It exists in this package in order to avoid circular dependency with the "job" package.
	JobsInverseTable = "jobs"
	// JobsColumn is the table column denoting the jobs relation/edge.
	JobsColumn = "template_id"
	// TagsTable is the table the holds the tags relation/edge. The primary key declared below.
	TagsTable = "job_template_tags"
	// TagsInverseTable is the table name for the Tag entity.
	// It exists in this package in order to avoid circular dependency with the "tag" package.
	TagsInverseTable = "tags"
)

// Columns holds all SQL columns are jobtemplate fields.
var Columns = []string{
	FieldID,
	FieldName,
	FieldContent,
}

var (
	// TagsPrimaryKey and TagsColumn2 are the table columns denoting the
	// primary key for the tags relation (M2M).
	TagsPrimaryKey = []string{"job_template_id", "tag_id"}
)

var (
	fields = schema.JobTemplate{}.Fields()

	// descName is the schema descriptor for Name field.
	descName = fields[0].Descriptor()
	// NameValidator is a validator for the "Name" field. It is called by the builders before save.
	NameValidator = descName.Validators[0].(func(string) error)

	// descContent is the schema descriptor for Content field.
	descContent = fields[1].Descriptor()
	// ContentValidator is a validator for the "Content" field. It is called by the builders before save.
	ContentValidator = descContent.Validators[0].(func(string) error)
)
