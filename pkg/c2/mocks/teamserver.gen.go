// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/kcarretto/paragon/pkg/c2 (interfaces: Teamserver)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	gomock "github.com/golang/mock/gomock"
	ent "github.com/kcarretto/paragon/ent"
	models "github.com/kcarretto/paragon/graphql/models"
	reflect "reflect"
)

// MockTeamserver is a mock of Teamserver interface
type MockTeamserver struct {
	ctrl     *gomock.Controller
	recorder *MockTeamserverMockRecorder
}

// MockTeamserverMockRecorder is the mock recorder for MockTeamserver
type MockTeamserverMockRecorder struct {
	mock *MockTeamserver
}

// NewMockTeamserver creates a new mock instance
func NewMockTeamserver(ctrl *gomock.Controller) *MockTeamserver {
	mock := &MockTeamserver{ctrl: ctrl}
	mock.recorder = &MockTeamserverMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockTeamserver) EXPECT() *MockTeamserverMockRecorder {
	return m.recorder
}

// ClaimTasks mocks base method
func (m *MockTeamserver) ClaimTasks(arg0 context.Context, arg1 models.ClaimTaskRequest) ([]*ent.Task, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ClaimTasks", arg0, arg1)
	ret0, _ := ret[0].([]*ent.Task)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ClaimTasks indicates an expected call of ClaimTasks
func (mr *MockTeamserverMockRecorder) ClaimTasks(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ClaimTasks", reflect.TypeOf((*MockTeamserver)(nil).ClaimTasks), arg0, arg1)
}
